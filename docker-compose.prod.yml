networks:
  default: null
  proxy:
    external:
      name: proxy_default


volumes:
  members-db:

services:
  app:
    image: wolbodo/members:latest
    restart: always
    depends_on:
      - graphql
    networks: [proxy, default]
    command: node .
    environment:
      VITE_GRAPHQL_ENDPOINT: https://graphql.wolbodo.nl/v1/graphql
      PORT: 80
      VIRTUAL_HOST: members.wolbodo.nl
      CERT_NAME: wildcard
      AUTH_JWT_SECRET: $AUTH_JWT_SECRET
      EMAIL_HOST: $EMAIL_HOST
      EMAIL_PORT: $EMAIL_PORT
      EMAIL_USER: $EMAIL_USER
      EMAIL_PASS: $EMAIL_PASS

  db:
    image: postgres:13-alpine
    restart: always
    command: postgres
    entrypoint: ./upgrade/docker-upgrade-entrypoint-wrapper.sh
    environment:
      POSTGRES_INITDB_ARGS: --data-checksums
    env_file:
      - ./.env
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:ro
      - ./db/upgrade:/upgrade:ro
      - members-db:/var/lib/postgresql/data

  graphql:
    image: hasura/graphql-engine:v2.0.0-beta.1
    restart: always
    networks: [proxy, default]
    depends_on:
      - db
    command: >
      /bin/sh -c "
      graphql-engine \
        serve \
        --server-port 80 \
        --access-key $HASURA_ACCESS_KEY \
        --enable-console;
      "
    environment:
      VIRTUAL_HOST: graphql.wolbodo.nl
      CERT_NAME: wildcard
      HASURA_GRAPHQL_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@db:5432/$POSTGRES_DB
      HASURA_GRAPHQL_JWT_SECRET: $AUTH_JWT_SECRET
      HASURA_GRAPHQL_CORS_DOMAIN: https://members.wolbodo.nl
