networks:
  external:
    external:
      name: proxy_default

volumes:
  members-db:

services:
  app:
    image: wolbodo/members:latest
    restart: always
    depends_on:
      - graphql
    networks: [external, default]
    command: node .
    expose:
      - 80
    env_file:
      - .env
    environment:
      VITE_GRAPHQL_ENDPOINT: https://graphql.wolbodo.nl/v1/graphql
      PORT: 80
      VIRTUAL_HOST: members.wolbodo.nl
      CERT_NAME: wildcard
      AUTH_JWT_SECRET: $HASURA_GRAPHQL_JWT_SECRET

  db:
    image: postgres:13-alpine
    restart: unless-stopped
    command: postgres
    environment:
      POSTGRES_INITDB_ARGS: --data-checksums
    env_file:
      - .env
    volumes:
      - members-db:/var/lib/postgresql/data

  graphql:
    image: hasura/graphql-engine:v2.0.10
    restart: unless-stopped
    networks: [external, default]
    depends_on:
      - db
    expose:
      - 80
    env_file:
      - .env
    command: >
      /bin/sh -c "
      graphql-engine serve \
        --server-port 80 \
        --enable-console
      "
    volumes:
      - ./migrations:/hasura-migrations:ro
      - ./metadata:/hasura-metadata:ro
    environment:
      VIRTUAL_HOST: graphql.wolbodo.nl
      CERT_NAME: wildcard
      HASURA_GRAPHQL_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@db:5432/$POSTGRES_DB
