version: "3.8"

networks:
  default:
    external:
      name: wolbodo

volumes:
  node_modules:
  __sapper__:
  yarn-cache:
  members-db:

services:
  app:
    image: node:alpine
    restart: always
    depends_on:
      - graphql
    volumes:
      - ./app:/app
      - node_modules:/app/node_modules
      - "yarn-cache:/usr/local/share/.cache/yarn/"
    environment:
      AUTH_JWT_SECRET: $AUTH_JWT_SECRET
      EMAIL_HOST: $EMAIL_HOST
      EMAIL_PORT: $EMAIL_PORT
      EMAIL_USER: $EMAIL_USER
      EMAIL_PASS: $EMAIL_PASS
      VITE_GRAPHQL_ENDPOINT: http://graphql.wolbodo/v1/graphql
    command: |
      sh -c "
        cd app
        yarn install --frozen-lockfile
        yarn run dev --host 0.0.0.0 --port 80
      "
    ports:
      - "80"

  db:
    image: postgres:13-alpine
    restart: always
    command: postgres
    entrypoint: ./upgrade/docker-upgrade-entrypoint-wrapper.sh
    environment:
      POSTGRES_INITDB_ARGS: --data-checksums
    env_file:
      - ./.env
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:ro
      - ./db/upgrade:/upgrade:ro
      - members-db:/var/lib/postgresql/data

  graphql:
    image: hasura/graphql-engine:latest
    restart: always
    depends_on:
      - db
    ports:
      - 80
    command: >
      /bin/sh -c "
      graphql-engine \
        serve \
        --server-port 80 \
        --access-key $HASURA_ACCESS_KEY \
        --enable-console;
      "
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@db:5432/$POSTGRES_DB
      HASURA_GRAPHQL_JWT_SECRET: $AUTH_JWT_SECRET
      HASURA_GRAPHQL_CORS_DOMAIN: http://app.wolbodo